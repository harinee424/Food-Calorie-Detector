# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LgMea4oZyc3AyOS2hvDhvqew5fw1Xd0W
"""

!pip install tensorflow keras numpy matplotlib pillow

from google.colab import files
uploaded = files.upload()

from google.colab import files
import zipfile, os

uploaded = files.upload()

with zipfile.ZipFile("food_dataset.zip", 'r') as zip_ref:
    zip_ref.extractall("/content/")

dataset_path = "/content/food_dataset"
print("Classes:", os.listdir(dataset_path))

import tensorflow as tf
from tensorflow.keras.preprocessing.image import ImageDataGenerator

datagen = ImageDataGenerator(rescale=1./255, validation_split=0.2)

train_data = datagen.flow_from_directory(
    dataset_path,
    target_size=(128, 128),
    batch_size=16,
    class_mode='categorical',
    subset='training'
)

val_data = datagen.flow_from_directory(
    dataset_path,
    target_size=(128, 128),
    batch_size=16,
    class_mode='categorical',
    subset='validation'
)

num_classes = len(train_data.class_indices)
class_names = list(train_data.class_indices.keys())
print("Class names:", class_names)

from tensorflow.keras.applications import MobileNetV2
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, GlobalAveragePooling2D

base_model = MobileNetV2(weights='imagenet', include_top=False, input_shape=(128,128,3))
base_model.trainable = False

model = Sequential([
    base_model,
    GlobalAveragePooling2D(),
    Dense(64, activation='relu'),
    Dense(num_classes, activation='softmax')
])

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
model.summary()

history = model.fit(
    train_data,
    validation_data=val_data,
    epochs=5
)

calorie_dict = {
    "Pizza": "285 kcal per slice",
    "Burger": "354 kcal per burger",
    "Chapathi": "80 kcal per piece",
    "Salad": "150 kcal per bowl",
    "Idli": "39 kcal per piece",
    "Fruits with yogurt": "200 kcal per 250g",
    "Rice and Chicken": "300 kcal per serving",
    "Blue Lays": "536 kcal per 100g",
    "Chicken Fry": "260 kcal per 100g",
    "Chocolate Shake": "350 kcal per glass",
    "Ice Cream": "207 kcal per cone",
    "Shawarma Roll": "375 kcal per roll",
    "Soft Drinks": "150 kcal per 330ml can",
    "Junk foods": "350-600 kcal (varies by item)"
}

def predict_food(img_path):
    img = image.load_img(img_path, target_size=(128,128))
    img_array = image.img_to_array(img)/255.0
    img_array = np.expand_dims(img_array, axis=0)

    prediction = model.predict(img_array)[0]
    predicted_index = np.argmax(prediction)
    food_name = class_names[predicted_index]

    if food_name == "Junk foods":
        lower_name = img_path.lower()
        if "pizza" in lower_name:
            food_name = "Pizza"
        elif "shawarma" in lower_name:
            food_name = "Shawarma Roll"
        elif "burger" in lower_name:
            food_name = "Burger"

    calories = calorie_dict.get(food_name, "350-600 kcal (varies by item)")

    print(f"✅ Prediction: {food_name}")
    print(f"✅ Estimated Calories: {calories}")

    plt.imshow(image.load_img(img_path))
    plt.title(f"{food_name} | {calories}")
    plt.axis('off')
    plt.show()

from google.colab import files
uploaded = files.upload()

print(uploaded)

predict_food("Pizza.jpeg")